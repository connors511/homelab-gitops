argo-cd:
  configs:
    params:
      server.insecure: true
    cm:
      timeout.reconciliation: 30s
      url: https://argocd.mlad.dk

      # Enable health check for Application resources to make sync-wave work properly:
      # https://kubito.dev/posts/enable-argocd-sync-wave-between-apps/
      resource.customizations.health.argoproj.io_Application: |
        hs = {}
        hs.status = "Progressing"
        hs.message = ""
        if obj.status ~= nil then
          if obj.status.health ~= nil then
            hs.status = obj.status.health.status
            if obj.status.health.message ~= nil then
              hs.message = obj.status.health.message
            end
          end
        end
        return hs

      # Must explicitly enable helm to support helmCharts property in kustomization.yaml
      kustomize.buildOptions: --load-restrictor LoadRestrictionsNone --enable-helm

      # Ignore differences for commonly troublesome webhooks properties
      resource.customizations.ignoreDifferences.admissionregistration.k8s.io_ValidatingWebhookConfiguration: |
        jqPathExpressions:
          - ".webhooks[]?.clientConfig.caBundle"
          - ".webhooks[]?.failurePolicy"
      resource.customizations.ignoreDifferences.admissionregistration.k8s.io_MutatingWebhookConfiguration: |
        jqPathExpressions:
          - ".webhooks[]?.clientConfig.caBundle"
          - ".webhooks[]?.failurePolicy"

      # linkerd CRD diff fix
      resource.customizations.ignoreDifferences.apiextensions.k8s.io_CustomResourceDefinition: |
        jsonPointers:
          - /spec/names/shortNames

      ## If Google SSO
      # dex.config: |
      #   connectors:
      #   - config:
      #       redirectURI: https://argocd.mlad.dk/api/dex/callback
      #       clientID: #### YOUR CLIENT ID ####
      #       clientSecret: #### YOUR CLIENT SECRET ####
      #       serviceAccountFilePath: /tmp/oidc/googleAuth.json
      #       adminEmail: #### ADMIN EMAIL ####
      #       hostedDomains:
      #         - mlad.dk
      #     type: google
      #     id: google
      #     name: Google

    rbac:
      policy.default: role:readonly
      # policy.csv: |
      #   g, <YOUR_GOOGLE_DEVOPS_GROUP>@mlad.dk.com, role:admin

  repoServer:
    autoscaling:
      enabled: false
      minReplicas: 2
      maxReplicas: 5
      targetCPUUtilizationPercentage: 50
      targetMemoryUtilizationPercentage: 50

  server:
    autoscaling:
      enabled: false
      minReplicas: 2
      maxReplicas: 5
      targetCPUUtilizationPercentage: 50
      targetMemoryUtilizationPercentage: 50

    service:
      type: ClusterIP

    ingress:
      enabled: true
      annotations:
        kubernetes.io/ingress.class: "nginx"
        nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
        nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
      hosts:
        - argocd.mlad.dk
      paths:
        - "/"
      pathType: Prefix

  dex:
    enabled: false
  ## If Google SSO
  # dex:
  #   volumes:
  #   - name: google-json
  #     secret:
  #       defaultMode: 420
  #       secretName: argocd-google-groups-json
  #   volumeMounts:
  #   - mountPath: /tmp/oidc
  #     name: google-json
  #     readOnly: true
