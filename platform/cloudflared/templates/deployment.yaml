apiVersion: apps/v1
kind: Deployment
metadata:
  name: cloudflared
  annotations:
    reloader.stakater.com/auto: "true"
spec:
  selector:
    matchLabels:
      app: cloudflared
  replicas: {{ .Values.replicas }}
  template:
    metadata:
      labels:
        app: cloudflared
      annotations:
        linkerd.io/inject: enabled
        kubectl.kubernetes.io/default-container: cloudflared
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app: cloudflared
                topologyKey: kubernetes.io/hostname
      containers:
        - name: cloudflared
          image: cloudflare/cloudflared:{{ .Chart.Version }}
          ports:
            - containerPort: 2000
          args:
            - tunnel
            - --config
            - /etc/cloudflared/config/config.yaml
            - run
          livenessProbe:
            httpGet:
              path: /ready # returns 200 if and only if it has an active connection to the edge.
              port: 2000
            failureThreshold: 1
            initialDelaySeconds: 10
            periodSeconds: 10
          volumeMounts:
            - name: config
              mountPath: /etc/cloudflared/config
              readOnly: true
            - name: credentials
              mountPath: /etc/cloudflared/credentials
              readOnly: true
      volumes:
        - name: credentials
          secret:
            secretName: tunnel-credentials
        - name: config
          configMap:
            name: cloudflared
            items:
              - key: config.yaml
                path: config.yaml
