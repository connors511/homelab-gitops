namespace: node-red

resources:
  - ./namespace.yaml
  - ./externalsecret.yaml
  - ./externalsecret-ssh.yaml

#generators:
#  - ./secret-generator.yaml

helmCharts:
  - name: app-template
    repo: https://bjw-s.github.io/helm-charts/
    releaseName: node-red
    version: 2.5.0
    namespace: node-red
    valuesInline:
      podSecurityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: "Always"

      controllers:
        main:
          annotations:
            reloader.stakater.com/auto: "true"

          pod:
            securityContext:
              runAsUser: 1000
              runAsGroup: 1000
              fsGroup: 1000
              fsGroupChangePolicy: "Always"

          containers:
            main:
              image:
                repository: nodered/node-red
                tag: 3.1.3-18-minimal
#                repository: docker.io/nodered/node-red
#                tag: 3.1.3
              resources:
                requests:
                  cpu: 5m
                  memory: 512Mi
                limits:
                  memory: 512Mi
              envFrom:
                - secretRef:
                    name: node-red-secret
              env:
                TZ: "Europe/Copenhagen"
                FLOWS: "flows.json"
                NODE_RED_ENABLE_PROJECTS: "true"
                NODE_RED_ENABLE_SAFE_MODE: "false"

          initContainers:
            ssh-permission:
              name: ssh-perm
              image:
                repository: busybox
                tag: latest
              securityContext:
                runAsUser: 0
#                privileged: true
              command: [ "sh","-c","cp /ssh-keys/public /usr/src/node-red/.ssh/id_ed25519.pub && cp /ssh-keys/private /usr/src/node-red/.ssh/id_ed25519" ]
              resources:
                limits:
                  cpu: "1"
                  memory: 1Gi
#              volumeMounts:
#                - name: vol-example
#                  mountPath: /vol-path

      service:
        main:
          ports:
            http:
              port: 1880

      ingress:
        main:
          enabled: true
          className: "nginx"
          annotations:
            nginx.ingress.kubernetes.io/auth-url: "https://auth.mlad.dk/oauth2/auth"
            nginx.ingress.kubernetes.io/auth-signin: https://auth.mlad.dk/oauth2/start
          hosts:
            - host: node-red.mlad.dk
              paths:
                - path: /
                  service:
                    name: main
                    port: http

      persistence:
        data:
          enabled: true
          mountPath: /data
#          storageClass: "rook-ceph-block"
          accessMode: ReadWriteOnce
          size: "5Gi"

        ssh-dist:
          type: emptyDir
          globalMounts:
            - path: /usr/src/node-red/.ssh
              readOnly: false

        ssh-keys:
          type: secret
          name: node-red-ssh
          defaultMode: 0644

#        config-file:
#          type: secret
#          name: node-red-ssh
#          defaultMode: 0644
#          globalMounts:
#            - path: /usr/src/node-red/.ssh/id_ed25519
#              subPath: private
##              readOnly: true
#            - path: /usr/src/node-red/.ssh/id_ed25519.pub
#              subPath: public
##              readOnly: true
#        config-file:
#          type: configMap
#          name: node-red-configmap
#          globalMounts:
#            - path: /data/settings.js
#              subPath: settings.js
#              readOnly: true

      tolerations:
        - key: "arm"
          operator: "Exists"

      resources:
        requests:
          memory: 350Mi
          cpu: 25m
        limits:
          memory: 500Mi

#configMapGenerator:
#  - name: node-red-configmap
#    files:
#      - config/settings.js
#generatorOptions:
#  disableNameSuffixHash: true
#  annotations:
#    kustomize.toolkit.fluxcd.io/substitute: disabled
